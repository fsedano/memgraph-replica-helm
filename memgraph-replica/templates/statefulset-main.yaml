# templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: memgraph-main
spec:
  selector:
    matchLabels:
      app: memgraph-db-main
  serviceName: "memgraph-main"
  replicas: 1
  template:
    metadata:
      labels:
        app: memgraph-db-main
    spec:
      initContainers:
        - name: init-volume-mounts
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: memgraph-main-lib-storage
              mountPath: /var/lib/memgraph
            - name: memgraph-main-log-storage
              mountPath: /var/log/memgraph
          command: ["/bin/sh", "-c"]
          args:
            - >
              chown -R memgraph:memgraph /var/lib/memgraph;
              chown -R memgraph:memgraph /var/log/memgraph;
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            capabilities:
              drop: ["all"]
              add: ["CHOWN"]
            runAsUser: 0
            runAsNonRoot: false
      volumes:
        - name: memgraph-main-lib-storage
          persistentVolumeClaim:
            claimName: memgraph-main-lib-storage
        - name: memgraph-main-log-storage
          persistentVolumeClaim:
            claimName: memgraph-main-log-storage
      containers:
        - name: set-replication
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
          - "/bin/bash"
          - "-c"
          - | 
            ls
            while true
            do
              echo 'REGISTER REPLICA REP1 ASYNC TO "memgraph-replica-1";' | mgconsole --host localhost --port 7687 -username test -password test
              echo 'REGISTER REPLICA REP2 ASYNC TO "memgraph-replica-2";' | mgconsole --host localhost --port 7687 -username test -password test
              echo 'SHOW REPLICAS;' | mgconsole --host localhost --port 7687  -username test -password test
              sleep 5
            done
        - name: memgraph
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
          {{- range .Values.memgraphConfig }}
          - {{ . | quote }}
          {{- end }}
          ports:
            - name: bolt
              containerPort: 7687
            - name: websocket
              containerPort: 7444
            - name: http
              containerPort: 9091
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - echo 'RETURN 0;' | mgconsole --host localhost --port 7687 -username test -password test
            initialDelaySeconds: {{ .Values.container.probes.liveliness.initialDelaySeconds }}
            periodSeconds: {{ .Values.container.probes.liveliness.periodSeconds }}
            failureThreshold: {{ .Values.container.probes.liveliness.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - echo 'RETURN 0;' | mgconsole --host localhost --port 7687 -username test -password test
            initialDelaySeconds: {{ .Values.container.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.container.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.container.probes.readiness.failureThreshold }}
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - echo 'RETURN 0;' | mgconsole --host localhost --port 7687 -username test -password test
            failureThreshold: {{ .Values.container.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.container.probes.startup.periodSeconds }}
            initialDelaySeconds: {{ .Values.container.probes.startup.initialDelaySeconds }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
           {{ if .Values.memgraphUser }}
            - name: MEMGRAPH_USER
              value: {{ .Values.memgraphUser }}
            - name: MEMGRAPH_PASSWORD
              value: {{ .Values.memgraphPassword }}
           {{- end }}
          volumeMounts:
            - name: memgraph-main-lib-storage
              mountPath: /var/lib/memgraph
            - name: memgraph-main-lib-storage
              mountPath: /var/log/memgraph
  volumeClaimTemplates:
    - metadata:
        name: memgraph-main-lib-storage
      spec:
        accessModes:
        - "ReadWriteOnce"
        {{- if .Values.persistentVolumeClaim.storageClassName }}
        storageClassName: {{ .Values.persistentVolumeClaim.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaim.storageSize }}
    - metadata:
        name: memgraph-main-log-storage
      spec:
        accessModes:
        - "ReadWriteOnce"
        {{- if .Values.persistentVolumeClaim.logStorageClassName }}
        storageClassName: {{ .Values.persistentVolumeClaim.logStorageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaim.logStorageSize }}
